{
    "tasks": [
        {
            "label": "Create MOC Directory",
            "type": "shell",
            "command": "cmd",
            "args": [
                "/C", "IF NOT EXIST \"${workspaceFolder}\\builds\\moc_builds\" (mkdir \"${workspaceFolder}\\builds\\moc_builds\")"
            ],
            "group": {
                "kind": "build",
                "isDefault": false,
            },
            "problemMatcher": []
        },
        {
            "label": "Generate main_layout MOC file",
            "type": "shell",
            "command": "C:\\Qt\\6.7.2\\mingw_64\\bin\\moc.exe",
            "args": [
                "-o", "${workspaceFolder}\\builds\\moc_builds\\main_layout.moc.cpp", 
                "${workspaceFolder}\\ApplicationCode\\include\\main_layout.h"
            ],
            "group": {
                "kind": "build",
                "isDefault": false,
            },
            "problemMatcher": [],
            "dependsOn": "Create MOC Directory",
        },
        {
            "label": "Generate dependency_handler MOC file",
            "type": "shell",
            "command": "C:\\Qt\\6.7.2\\mingw_64\\bin\\moc.exe",
            "args": [
                "-o", "${workspaceFolder}\\builds\\moc_builds\\dependency_handler.moc.cpp", 
                "${workspaceFolder}\\ApplicationCode\\include\\dependency_handler.h"
            ],
            "group": {
                "kind": "build",
                "isDefault": false,
            },
            "problemMatcher": [],
            "dependsOn": "Generate main_layout MOC file",
        },
        {
            "label": "Build Application",
            "type": "cppbuild",
            "command": "C:\\msys64\\ucrt64\\bin\\g++.exe",
            "args": [
                "-fdiagnostics-color=always",
                "-g", 
                "${workspaceFolder}\\MainApp\\main.cpp",
                "${workspaceFolder}\\builds\\moc_builds\\main_layout.moc.cpp",
                "${workspaceFolder}\\builds\\moc_builds\\dependency_handler.moc.cpp",
                "-o", "${workspaceFolder}\\builds\\app_build\\app.exe",
                "-I", "${workspaceFolder}\\ApplicationCode\\include",
                "-I", "${workspaceFolder}\\LogicCode\\include",
                "-I", "C:\\Qt\\6.7.2\\mingw_64\\include",
                "-L", "C:\\Qt\\6.7.2\\mingw_64\\lib",
                "-lQt6Widgets",
                "-lQt6Core",
                "-lQt6Gui"
            ],
            "options": {
                "cwd": "${fileDirname}"
            },
            "problemMatcher": [
                "$gcc"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "dependsOn": "Generate dependency_handler MOC file",
            "detail": "Task building the main application."
        },
        {
            "label": "Run Application.",
            "type": "shell",
            "command": "${workspaceFolder}\\builds\\app_build\\app.exe",
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "detail": "Task running the main application."
        },
        {
            "label": "CMake: Configure",
            "type": "shell",
            "command": "cmake",
            "args": [
                "-S", ".",
                "-B", "builds/test_builds"
                
            ],
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": []
        },
        {
            "label": "CMake: Build",
            "type": "shell",
            "command": "cmake",
            "args": [
                "--build", "builds/test_builds",
                "--config=Release"
            ],
            "dependsOn": "CMake: Configure",
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": []
        },
        {
            "label": "CMake: Build Again", // Forcing the build for the second time to ensure correct python libraries import.
            "type": "shell",
            "command": "cmake",
            "args": [
                "--build", "builds/test_builds",
                "--config=Release"
            ],
            "dependsOn": "CMake: Build",
            "group": {
                "kind": "build",
                "isDefault": false
            },
            "problemMatcher": []
        },
        {
            "label": "Build Tests.",
            "dependsOn": [
                "CMake: Configure",
                "CMake: Build",
                "CMake: Build Again"
            ],
            "dependsOrder": "sequence",
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "problemMatcher": [],
            "detail": "Task buidling all tests defined in the CMakeLists.txt."
        },
        {
            "label": "Run Tests by the test suite name.",
            "type": "shell",
            "command": "ctest",
            "args": [
                "--output-on-failure",
                "-R",
                "${input:testName}"
            ],
            "group": {
                "kind": "test",
                "isDefault": true
            },
            "problemMatcher": [],
            "options": {
                "cwd": "${workspaceFolder}/builds/test_builds"
            },
            "detail": "Task running all tests which have been built."
        }
    ],
    "version": "2.0.0",
    "inputs": [
        {
            "id": "testName",
            "type": "promptString",
            "description": "Enter the test name or pattern to run",
            "default": ""
        }
    ]
}